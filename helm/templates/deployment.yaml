---
apiVersion: apps/v1 
kind: Deployment
metadata:
  annotations:
    fabric8.io/metrics-path: dashboard/file/camel-routes.json/?var-project={{ .Values.serviceName }}&var-version={{ .Values.imageTag }}
  labels:
    app: {{ .Values.serviceName }}
    version: "{{ .Values.imageTag }}"
  name: {{ .Values.serviceName }}
spec:
  replicas: {{ .Values.numOfPods | default 2 }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{ .Values.serviceName }}
  template:
    metadata:
      annotations:
        fabric8.io/metrics-path: dashboard/file/camel-routes.json/?var-project={{ .Values.serviceName }}&var-version={{ .Values.imageTag }}
      labels:
        app: {{ .Values.serviceName }}
        version: "{{ .Values.imageTag }}"
        date: "{{ date "20060102-150405" .Release.Time }}"
    spec:
      {{- if (.Values.acrSecretName) }} 
      imagePullSecrets:
        - name: {{ .Values.acrSecretName }}
      {{- end }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: computeResources
                operator: In
                values:
                - High
    {{- if (.Values.pushGwyHostName) }} 
      hostAliases:
        - ip: {{ .Values.pushGwySvcIP }}
          hostnames:
          - {{ .Values.pushGwyHostName }}
    {{- end }}
      initContainers:
      - env:
        - name: SYNAPSE_DB_HOST
          value: {{ .Values.synapseDbHost }}
        - name: SYNAPSE_DB_PASSWORD
          valueFrom:
           secretKeyRef:
            name: aether-itops-replica-storage-secrets
            key: keyPassword
        - name: AZURE_TENANT_ID
          valueFrom:
           secretKeyRef:
            name: {{ .Values.serviceName }}-secrets
            key: azureTenantId
        - name: AZURE_CLIENT_ID
          valueFrom:
           secretKeyRef:
            name: {{ .Values.serviceName }}-secrets
            key: azureClientId
        - name: AZURE_CLIENT_SECRET
          valueFrom:
           secretKeyRef:
            name: {{ .Values.serviceName }}-secrets
            key: azureClientSecret
        - name: REGISTRATION_SHARED_SECRET
          valueFrom:
           secretKeyRef:
            name: {{ .Values.serviceName }}-secrets
            key: registrationSharedSecret
        - name: MACAROON_SECRET_KEY
          valueFrom:
           secretKeyRef:
            name: {{ .Values.serviceName }}-secrets
            key: macaroonSecretKey
        - name: FORM_SECRET
          valueFrom:
           secretKeyRef:
            name: {{ .Values.serviceName }}-secrets
            key: formSecret
        {{- if (.Values.turnURLs) }} 
        - name: TURN_SERVER_SHARED_SECRET
          valueFrom:
           secretKeyRef:
            name: {{ .Values.serviceName }}-secrets
            key: turnServerSharedSecret
        {{- end }}
        {{- if (.Values.fhirBridgeURL) }} 
        - name: FHIRBRIDGE_AS_TOKEN
          valueFrom:
           secretKeyRef:
            name: {{ .Values.serviceName }}-secrets
            key: fhirBridgeASToken
        - name: FHIRBRIDGE_HS_TOKEN
          valueFrom:
           secretKeyRef:
            name: {{ .Values.serviceName }}-secrets
            key: fhirBridgeHSToken
        {{- end }}
        {{- if (.Values.replicaBridgeURL) }} 
        - name: REPLICABRIDGE_AS_TOKEN
          valueFrom:
           secretKeyRef:
            name: {{ .Values.serviceName }}-secrets
            key: replicaBridgeASToken
        - name: REPLICABRIDGE_HS_TOKEN
          valueFrom:
           secretKeyRef:
            name: {{ .Values.serviceName }}-secrets
            key: replicaBridgeHSToken
        {{- end }}
        name: init
        image: alpine:3.12.3
        imagePullPolicy: {{ .Values.imagePullPolicy | default "IfNotPresent" }}
        command: 
          - sh
          - "-c"
          - "echo Updating /var/lib/synapse/config/homeserver.yaml file;
            [ -e /var/lib/synapse/config/homeserver-with-placeholders.yaml ] || cp /var/lib/synapse/config/homeserver.yaml /var/lib/synapse/config/homeserver-with-placeholders.yaml;
            /bin/cp -f /var/lib/synapse/config/homeserver-with-placeholders.yaml /var/lib/synapse/config/homeserver.yaml;
            sed -i \"s/<MatrixServerName>/{{ .Values.matrixServerName }}/\" /var/lib/synapse/config/homeserver.yaml;
            sed -i \"s/<db-host>/${SYNAPSE_DB_HOST}/\" /var/lib/synapse/config/homeserver.yaml;
            sed -i \"s/<db-password>/${SYNAPSE_DB_PASSWORD}/\" /var/lib/synapse/config/homeserver.yaml;
            sed -i \"s/<publicBaseHostNameAndPort>/{{ .Values.externalDnsEntry | default (print (.Values.dnsEntry | default (print .Values.serviceName "." .Release.Namespace ":" .Values.basePort) ) ) }}/\" /var/lib/synapse/config/homeserver.yaml;
            sed -i \"s/<serviceName>/{{ .Values.externalDnsEntry | default (print .Values.serviceName ".site-a" ) }}/\" /var/lib/synapse/config/homeserver.yaml;            
            sed -i \"s/<tenant id>/${AZURE_TENANT_ID}/\" /var/lib/synapse/config/homeserver.yaml;
            sed -i \"s/<client id>/${AZURE_CLIENT_ID}/\" /var/lib/synapse/config/homeserver.yaml;
            sed -i \"s/<client secret>/${AZURE_CLIENT_SECRET}/\" /var/lib/synapse/config/homeserver.yaml;
            sed -i \"s/<registrationSharedSecret>/${REGISTRATION_SHARED_SECRET}/\" /var/lib/synapse/config/homeserver.yaml;
            sed -i \"s/<macaroonSecretKey>/${MACAROON_SECRET_KEY}/\" /var/lib/synapse/config/homeserver.yaml;
            sed -i \"s/<formSecret>/${FORM_SECRET}/\" /var/lib/synapse/config/homeserver.yaml;
            sed -i \"s/<AllowPasswordLogin>/{{ .Values.allowPasswordLogin | default "false" }}/\" /var/lib/synapse/config/homeserver.yaml;
        {{- if (.Values.turnURLs) }} 
            sed -i '/turn_uris:/ a turn_allow_guests: {{ .Values.turnAllowGuests | default "true" }} \\' /var/lib/synapse/config/homeserver.yaml;
            sed -i '/turn_uris:/ a turn_shared_secret: \"<turnServerSharedSecret>\" \\' /var/lib/synapse/config/homeserver.yaml;
            sed -i \"s/<turnServerSharedSecret>/${TURN_SERVER_SHARED_SECRET}/\" /var/lib/synapse/config/homeserver.yaml;
            sed -i '/turn_uris:/ a turn_user_lifetime: {{ .Values.turnUserLifetime | default "1h" }} \\' /var/lib/synapse/config/homeserver.yaml;
          {{- range (split "^" .Values.turnURLs) }}
            sed -i '/turn_uris:/ a\\  - \"{{ . }}\" ' /var/lib/synapse/config/homeserver.yaml;            
          {{- end }}
            sed -i '/#turn_uris:/ a turn_uris: ' /var/lib/synapse/config/homeserver.yaml;
        {{- end }}
        {{- if (.Values.clientProtocolHostNameAndPorts) }} 
          {{- range (split "^" .Values.clientProtocolHostNameAndPorts) }}
            sed -i '/client_whitelist:/ a\\      - {{ . }} ' /var/lib/synapse/config/homeserver.yaml;
            sed -i '/client_whitelist:/ a\\      - {{ . }}# ' /var/lib/synapse/config/homeserver.yaml;
          {{- end }}
            sed -i '/#client_whitelist:/ a\\    client_whitelist: ' /var/lib/synapse/config/homeserver.yaml;
        {{- end }}
        {{- if (.Values.pushGwySvcIP) }} 
            sed -i \"/#ip_range_whitelist:/ a\\  - '{{ .Values.pushGwySvcIP }}' \" /var/lib/synapse/config/homeserver.yaml;
            sed -i '/#ip_range_whitelist:/ a\\ip_range_whitelist: ' /var/lib/synapse/config/homeserver.yaml;
        {{- end }}
        {{- if (.Values.fhirBridgeURL) }} 
            sed -i '/#app_service_config_files:/ a\\  - /var/lib/synapse/config/communicate-fhirbridge-link.yaml ' /var/lib/synapse/config/homeserver.yaml;
        {{- end }}
        {{- if (.Values.replicaBridgeURL) }} 
            sed -i '/#app_service_config_files:/ a\\  - /var/lib/synapse/config/replica-bridge-registration.yaml ' /var/lib/synapse/config/homeserver.yaml;
        {{- end }}
        {{- if or (.Values.fhirBridgeURL) (.Values.replicaBridgeURL) }} 
            sed -i '/#app_service_config_files:/ a\\app_service_config_files: ' /var/lib/synapse/config/homeserver.yaml;
        {{- end }}
            echo START of /var/lib/synapse/config/homeserver.yaml file content;
            echo ' ';
            cat /var/lib/synapse/config/homeserver.yaml;
            echo ' ';
            echo END of /var/lib/synapse/config/homeserver.yaml file content;
        {{- if (.Values.fhirBridgeURL) }} 
            echo Updating /var/lib/synapse/config/communicate-fhirbridge-link.yaml file; 
            [ -e /var/lib/synapse/config/communicate-fhirbridge-link-with-placeholders.yaml ] || cp /var/lib/synapse/config/communicate-fhirbridge-link.yaml /var/lib/synapse/config/communicate-fhirbridge-link-with-placeholders.yaml;
            /bin/cp -f /var/lib/synapse/config/communicate-fhirbridge-link-with-placeholders.yaml /var/lib/synapse/config/communicate-fhirbridge-link.yaml;
            sed -i \"s+<url>+{{ .Values.fhirBridgeURL }}+\" /var/lib/synapse/config/communicate-fhirbridge-link.yaml;
            sed -i \"s/<as_token>/${FHIRBRIDGE_AS_TOKEN}/\" /var/lib/synapse/config/communicate-fhirbridge-link.yaml;
            sed -i \"s/<hs_token>/${FHIRBRIDGE_HS_TOKEN}/\" /var/lib/synapse/config/communicate-fhirbridge-link.yaml;
            echo START of /var/lib/synapse/config/communicate-fhirbridge-link.yaml file content;
            echo ' ';
            cat /var/lib/synapse/config/communicate-fhirbridge-link.yaml;
            echo ' ';
            echo END of /var/lib/synapse/config/communicate-fhirbridge-link.yaml file content;
        {{- end }}
        {{- if (.Values.replicaBridgeURL) }} 
            echo Updating /var/lib/synapse/config/replica-bridge-registration.yaml file; 
            [ -e /var/lib/synapse/config/replica-bridge-registration-with-placeholders.yaml ] || cp /var/lib/synapse/config/replica-bridge-registration.yaml /var/lib/synapse/config/replica-bridge-registration-with-placeholders.yaml;
            /bin/cp -f /var/lib/synapse/config/replica-bridge-registration-with-placeholders.yaml /var/lib/synapse/config/replica-bridge-registration.yaml;
            sed -i \"s+<url>+{{ .Values.replicaBridgeURL }}+\" /var/lib/synapse/config/replica-bridge-registration.yaml;
            sed -i \"s/<as_token>/${REPLICABRIDGE_AS_TOKEN}/\" /var/lib/synapse/config/replica-bridge-registration.yaml;
            sed -i \"s/<hs_token>/${REPLICABRIDGE_HS_TOKEN}/\" /var/lib/synapse/config/replica-bridge-registration.yaml;
            echo START of /var/lib/synapse/config/replica-bridge-registration.yaml file content;
            echo ' ';
            cat /var/lib/synapse/config/replica-bridge-registration.yaml;
            echo ' ';
            echo END of /var/lib/synapse/config/replica-bridge-registration.yaml file content;
        {{- end }}
            echo Updating /var/lib/synapse/config/log.config file; 
            [ -e /var/lib/synapse/config/log-with-placeholders.config ] || cp /var/lib/synapse/config/log.config /var/lib/synapse/config/log-with-placeholders.config;
            /bin/cp -f /var/lib/synapse/config/log-with-placeholders.config /var/lib/synapse/config/log.config;
            sed -i \"s/INFO/{{ .Values.matrixLogLevel | default "INFO" }}/\" /var/lib/synapse/config/log.config;
            echo START of /var/lib/synapse/config/log.config file content;
            echo ' ';
            cat /var/lib/synapse/config/log.config;
            echo ' ';
            echo END of /var/lib/synapse/config/log.config file content;
            "
        volumeMounts:
        - name: config
          mountPath: /var/lib/synapse/config
      containers:
      - env:
        {{- if (.Values.httpProxyHostAndPort) }} 
        - name: http_proxy
          value: {{ .Values.httpProxyHostAndPort }}
        - name: HTTPS_PROXY
          value: {{ .Values.httpProxyHostAndPort }}
         {{- if (.Values.pushGwyHostName) }} 
        - name: no_proxy
          value: {{ .Values.pushGwyHostName }}
         {{- end }}
        {{- end }}
        - name: SYNAPSE_CONFIG_DIR
          value: /var/lib/synapse/config
        - name: SYNAPSE_DATA_DIR
          value: /var/lib/synapse/data
        {{- if (.Values.dnsEntry) }} 
        - name: DNS_ENTRY
          value: {{ .Values.dnsEntry }}
        - name: {{ upper .Values.serviceName | replace "-" "_" }}_{{ upper .Release.Namespace | replace "-" "_" }}_DNS_ENTRY
          value: {{ .Values.dnsEntry }}
        {{- end }}
        {{- if (.Values.externalDnsEntry) }} 
        - name: EXTERNAL_DNS_ENTRY
          value: {{ .Values.externalDnsEntry }}
        - name: {{ upper .Values.serviceName | replace "-" "_" }}_{{ upper .Release.Namespace | replace "-" "_" }}_EXTERNAL_DNS_ENTRY
          value: {{ .Values.externalDnsEntry }}
        {{- end }}
        - name: KUBERNETES_SERVICE_NAME
          value: {{ .Values.serviceName }}
        - name: {{ upper .Values.serviceName | replace "-" "_" }}_{{ upper .Release.Namespace | replace "-" "_" }}_KUBERNETES_SERVICE_NAME
          value: {{ .Values.serviceName }}
        - name: KUBERNETES_NAMESPACE
          value: {{ .Release.Namespace }}
        - name: {{ upper .Values.serviceName | replace "-" "_" }}_{{ upper .Release.Namespace | replace "-" "_" }}_KUBERNETES_NAMESPACE
          value: {{ .Release.Namespace }}
        - name: HELM_RELEASE_TIME
          value: "{{ date "20060102-150405" .Release.Time }}"
        - name: MY_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_POD_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: JVM_MAX_HEAP_SIZE
          value: "{{ .Values.jvmMaxHeapSizeMB }}m"
        # Set the minimum memory that will be available on the node to assign to the container to be the jvmMaxHeapSizeMB plus 128 MB 
        # for the native heap and operation system processes associated with running Java
        # See https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/#motivation-for-memory-requests-and-limits
        # and https://www.alibabacloud.com/blog/kubernetes-demystified-restrictions-on-java-application-resources_594108
        resources:
          requests:
            memory: "{{ (add 128 .Values.jvmMaxHeapSizeMB) | default 2048 }}Mi"
        image: {{ .Values.dockerRepo }}pegacorn-communicate-roomserver:{{ .Values.imageTag }}            
        imagePullPolicy: {{ .Values.imagePullPolicy | default "IfNotPresent" }}
        livenessProbe:
          httpGet:
            path: /
            port: 8448
            scheme: HTTPS
          initialDelaySeconds: 30
        name: synapse
        ports:
        - containerPort: 8448
          name: https
          protocol: TCP
        - containerPort: 8008
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 8448
            scheme: HTTPS
          initialDelaySeconds: 10
        securityContext:
          privileged: false
        volumeMounts:
        - name: data
          mountPath: /var/lib/synapse/data
        - name: config
          mountPath: /var/lib/synapse/config
        - name: certificates
          mountPath: /var/lib/synapse/certificates
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds | default 30 }}
      volumes:
      - name: data
        hostPath: 
          path: {{ .Values.hostPathData | default (print .Values.hostPath "-tmp-data") }}
      - name: config
        hostPath: 
          path: {{ .Values.hostPath }}
      - name: certificates
        hostPath:
          path: {{ .Values.hostPathCerts }}